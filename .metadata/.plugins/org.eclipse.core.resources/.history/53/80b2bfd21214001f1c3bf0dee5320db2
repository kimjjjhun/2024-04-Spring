<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="sec"
	uri="http://www.springframework.org/security/tags"%>

<!DOCTYPE html>

<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Insert title here</title>
<link rel="stylesheet" href="../resources/board/list.css">
<link rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
<script
	src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.slim.min.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
	
	<style>
.calendar_container {
    position:absolute;
    left:29%;
    top:25%;
    display: flex;
    justify-content:space-evenly;
    width: 42%;
    background-color: white;
    box-shadow: 1px 1px 25px rgb(0, 0, 0 / 17%);
    border: 1px solid black;
    border-radius: 50px;
}

.hide {
    display:none;
}

.calendar_container > button {
    margin-top: 4%;
    font-weight: bold;
    height:10%;
}

.left_button {
    margin-left:17%;
    border: transparent;
}

.right_button {
    margin-right:17%;
    border: transparent;
}

.calendar {
    display:flex;
    flex-direction: column;
    justify-content:center;
    align-items: center;
    margin-top: 3%;
    margin-right:2.5%;
}


.calendar_days > button  {
    width: 48px;
    height: 47px;
    border-radius: 100%;
    background-color: transparent;
    border: transparent;
}

table {
    border-collapse: separate;
    border-spacing: 0 10px;
}

.day {
    text-align: center;
    font-size:12px;
    font-weight: bold;
    color:rgb(189, 189, 189);
}


.day_hover {
    border: 1px solid black !important;
}

.day_selected {
    background-color: black !important;
    color: #ffff;
}

.gray {
    background-color: rgb(241, 241, 241) !important;
}


	</style>

</head>

<%@include file="../header.jsp"%>

<body>
	<div class="page-title">
		<div class="container">
			<h3 style="margin-top: 30px;"><a class="nav-link" href="/board/list"><strong>M Y P A G E</strong></a></h3>
		</div>
	</div>

	<!-- board list area -->
	<div id="board-list">
		<div class="container">
			<table class="board-table">
				<thead>
					<tr>
						 <th scope="col" class="th-num">계획</th>
						 <th scope="col" class="th-date">NAME</th>
						 <th scope="col" class="th-date">REGDATE</th>
						<th scope="col" class="th-date">PLAN GO</th>
						<th scope="col" class="th-date">PLAN END</th>
						<th scope="col" class="th-date">TRIP DAY</th>
						<th scope="col" class="th-date">교통편</th>
					</tr>
				</thead>

				<tbody>
					<c:forEach var="member" items="${list}">
						<tr>
							<td>${plan.plan_id}</td>
							<td>${board.member_email}</td>
							<td><fmt:formatDate value="${plan.regdate}"	pattern="yyyy-MM-dd" /></td>
							<td><fmt:formatDate value="${plan.go}"	pattern="yyyy-MM-dd" /></td>
							<td><fmt:formatDate value="${plan.end}"	pattern="yyyy-MM-dd" /></td>
							<td><fmt:formatDate value="${plan.day}"	pattern="yyyy-MM-dd" /></td>
							<td>${plan.plan_tpa}</td>
						</tr>
					</c:forEach>
				</tbody>

			</table>
		</div>
	</div>



<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">일정 선택</button><br>
	<button data-oper='list' class="btn btn-dark" style="margin-top: 20px; margin-right: 20px; float: right;">돌아가기</button>

			<!-- 페이징 처리 -->
	<div class="row">
		<div class="col-lg-12">
			<ul class="pagination"
				style="float: right; margin-right: 100px; margin-top: 30px">
				<c:if test="${pageMaker.prev}">
					<li class="page-item"><a class="page-link"
						href="${pageMaker.startPage - 1}">이전</a></li>
				</c:if>
				<c:forEach var="num"
					begin="${pageMaker.startPage > 0 
						? pageMaker.startPage : 1}"
					end="${pageMaker.endPage}">
					<li class="page-item ${pageMaker.cri.pageNum == num ? "active" : ""} ">
						<a class="page-link" href="${num}">${num}</a>
					</li>
				</c:forEach>

				<c:if test="${pageMaker.next}">
					<li class="page-item"><a class="page-link"
						href="${pageMaker.endPage}">다음</a></li>
				</c:if>

			</ul>
		</div>
	</div>

	<form id="actionForm" action="/board/list" method="get">
		<input type="hidden" name="pageNum" value=${pageMaker.cri.pageNum}>
		<input type="hidden" name="amount" value=${pageMaker.cri.amount}>
		<input type="hidden" name="type" value=${pageMaker.cri.type}>
		<input type="hidden" name="keyword" value=${pageMaker.cri.keyword}>
	</form>
			<!-- End 페이징 처리 -->
			

        
      <div class="sec_cal">
  <div class="cal_nav">
    <a href="javascript:;" class="nav-btn go-prev">prev</a>
    <div class="year-month"></div>
    <a href="javascript:;" class="nav-btn go-next">next</a>
  </div>
  <div class="cal_wrap">
    <div class="days">
      <div class="day">MON</div>
      <div class="day">TUE</div>
      <div class="day">WED</div>
      <div class="day">THU</div>
      <div class="day">FRI</div>
      <div class="day">SAT</div>
      <div class="day">SUN</div>
    </div>
    <div class="dates"></div>
  </div>
</div>

			
			

	
	<!-- 캘린더 모달 스크립트-->
	    <script>
	    const calendarDays = document.querySelectorAll(".calendar_days"),
	    calendarTitle = document.querySelector(".title"),
	    leftButton = document.querySelector(".left_button"),
	    rightButton = document.querySelector(".right_button"),
	    calendar = document.querySelector(".calendar");
	    // dateUpdate = document.querySelector(".date_update");


	class Calendar {
	    constructor(year, month) {
	        this.today = new Date(year, month);
	        this.year = this.today.getFullYear(),
	            this.month = this.today.getMonth(),
	            this.date = this.today.getDate(),
	            this.day = this.today.getDay()
	    }


	    getFirstDay() {
	        const firstDate = new Date(this.year, this.month);
	        return firstDate.getDay();
	    }

	    getLastDay() {
	        let wholeDays = [];
	        if ((this.year % 4 === 0 && this.year % 100 !== 0) || (this.year % 400 === 0)) {
	            wholeDays = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	        } else {
	            wholeDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	        }
	        return wholeDays[this.month];
	    }

	    fillCalendar() {
	        this.initCalendar();
	        calendarTitle.innerHTML = `${this.year}년 ${this.month + 1}월`
	        const firstDay = this.getFirstDay();
	        const lastDay = this.getLastDay();
	        let day = 1;
	        for (let i = firstDay; i < calendarDays.length; i++) {
	            if (day <= lastDay) {
	                calendarDays[i].innerHTML = `<button class = "day_button">${day}</button>`;
	                day++;
	            }

	        }
	    }

	    initCalendar() {
	        calendarDays.forEach((e) => {
	            e.innerHTML = "";
	        });
	    }


	    drawCalendar() {
	        let change = 0;
	        const today = new Date();
	        let calendarInstance = new Calendar(today.getFullYear(), today.getMonth() + change);

	        calendarInstance.fillCalendar();

	        leftButton.addEventListener("click", (e) => {
	            e.stopPropagation();
	            change--;
	            calendarInstance = new Calendar(today.getFullYear(), today.getMonth() + change);
	            calendarInstance.fillCalendar();
	            this.updateCalendarStyle();
	        });
	        rightButton.addEventListener("click", (e) => {
	            e.stopPropagation();
	            change++;
	            calendarInstance = new Calendar(today.getFullYear(), today.getMonth() + change);
	            calendarInstance.fillCalendar();
	            this.updateCalendarStyle();
	        });
	    }


	    updateCalendarStyle() {
	        const dayButtons = document.querySelectorAll(".day_button");
	        let firstSelectedDay = 0;
	        let lastSelectedDay = 0;
	        let clickCount = 0;

	        // 달력 스타일 초기화
	        dayButtons.forEach((element) => {
	            element.classList.remove("day_selected");
	            calendarDays.forEach((e) => e.classList.remove("gray"));
	        })


	        // 달력 날짜들에 클릭 이벤트 추가
	        dayButtons.forEach((element) => {
	            element.addEventListener("click", (event) => {
	                event.target.classList.toggle("day_selected");

	                clickCount++;

	                // 선택 일자 타입 변환
	                if (firstSelectedDay === 0) {
	                    firstSelectedDay = Number(event.target.innerText);
	                } else {
	                    lastSelectedDay = Number(event.target.innerText);
	                }

	                // 클릭 횟수 2회 넘어가면 달력 스타일 초기화
	                if (clickCount > 2) {
	                    dayButtons.forEach((e) => {
	                        e.parentNode.classList.remove("gray");
	                        e.classList.remove("day_selected");
	                        clickCount = 0;
	                        firstSelectedDay = 0;
	                        lastSelectedDay = 0;
	                    });
	                }

	                // 선택 일자 사이에 회색 배경 적용
	                if (firstSelectedDay !== 0 && lastSelectedDay !== 0) {
	                    dayButtons.forEach((e) => {
	                        const day = Number(e.innerText);
	                        if (day >= firstSelectedDay && day <= lastSelectedDay) {
	                            e.parentNode.classList.toggle("gray");
	                        }
	                    });
	                }

	                // 선택 일자 중 왼쪽값이 오른쪽 값보다 크면 회색 배경 삭제 
	                if (firstSelectedDay > lastSelectedDay) {
	                    dayButtons.forEach((e) => {
	                        e.parentNode.classList.remove("gray");
	                    });
	                }
	            });
	        });


	        // 달력 날짜들에 호버링 이벤트 추가
	        dayButtons.forEach((element) => {
	            element.addEventListener("mouseenter", (event) => {
	                event.target.classList.add("day_hover")
	            });
	        });

	        dayButtons.forEach((element) => {
	            element.addEventListener("mouseleave", (event) => {
	                event.target.classList.remove("day_hover")
	            });
	        });
	    }



	    handleEvents() {
	        this.drawCalendar();
	        this.updateCalendarStyle();
	    }

	}


	const cal = new Calendar();
	cal.handleEvents();

	    </script>

</body>
</html>

<%@include file="../footer.jsp"%>