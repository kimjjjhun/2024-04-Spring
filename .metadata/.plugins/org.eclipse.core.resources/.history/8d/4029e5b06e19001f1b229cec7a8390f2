package kr.trip.domain;

import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.RequiredArgsConstructor;

@Data
public class MemberVO implements UserDetails{

	 private static final long serialVersionUID = 1L;

   private String member_email;
   private String pwd;
   private String name;
   private String phone;
   private List<AuthVO> authList;
   private Date member_regdate;
   private String image;
   @Override
   public Collection<? extends GrantedAuthority> getAuthorities() {
	   
	   
      return authList.stream()
    		  .map(auth -> new SimpleGrantedAuthority(auth.getAuth()))
    		  .collect(Collectors.toList());
   }
   @Override
   public String getUsername() {
	   return member_email;
   }
   @Override
   public String getPassword() {
      return pwd;
   }
   @Override
   public boolean isAccountNonExpired() {
      return true;
   }
   @Override
   public boolean isAccountNonLocked() {
      return true;
   }
   @Override
   public boolean isCredentialsNonExpired() {
      return true;
   }
   @Override
   public boolean isEnabled() {
      return true;
   }
   
   public void setImage(String profileImagePath) {
	    this.image = profileImagePath;@Override
	    public void saveProfileImage(String member_email, MultipartFile file) {
	        // 파일 저장 경로 설정 (예시)
	        String uploadDir = "c:/upload/";

	        // 파일 이름 생성
	        String fileName = member_email + "-" + file.getOriginalFilename();

	        try {
	            // 파일을 지정된 경로에 저장
	            Path filePath = Paths.get(uploadDir, fileName);
	            Files.write(filePath, file.getBytes());

	            // 데이터베이스에 이미지 파일 경로 또는 파일 이름 저장
	            MemberVO member = memberMapper.findByMemberEmail(member_email);
	            member.setImage(fileName); // 또는 filePath.toString() 등으로 경로 저장
	            memberMapper.update(member); // 이미 존재하는 회원 정보를 업데이트하는 것으로 가정합니다.
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }
	}
   
}